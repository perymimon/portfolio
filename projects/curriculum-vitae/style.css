@import "../../base.css" layer(base);

/* Enable CSS variable animations */
@property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

@property --color-border {
    syntax: "<color>";
    inherits: false;
}

@property --color {
    syntax: "<color>";
    inherits: false;
    initial-value: transparent;
}

@property --percent {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
}

@keyframes percent-animation {
    from {
        --percent: 0%;
    }
    to {
        --percent: 100%;
    }
}

.text-box-trim {
    text-box: trim-start cap alphabetic;
}

.font-inter {
    font-family: "Inter", sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
}

.inline-flex {
    display: inline flex;
}

.flex {
    display: block flex;
}

.warp {
    flex-wrap: wrap;
}

.absolute {
    position: absolute;
}

.flex-flow-row {
    flex-flow: row;
}

.space-between {
    justify-content: space-between;
}

.flex-grow-0 { flex-grow: 0;}

.flex-grow-1 { flex-grow: 1;}

.flex-basis-equal {
    flex: 1 1 0;
}

.space-around {
    justify-content: space-around;
}

.max-w-3xl {
    max-width: 48rem;
}

.mx-auto {
    margin-inline: auto;
}

.text-lg {
    font-size: var(--font-size-lg);
    line-height: 1.75rem;
}

.bg-color {
    background-color: var(--color-background);
}

.gap-1 { gap: var(--space-1)}

.gap-2 { gap: var(--space-2)}

.gap-3 { gap: var(--space-3)}

.gap-4 { gap: var(--space-4)}

.md-6 { margin-block-end: var(--space-6);}

.md-2 { margin-block-end: var(--space-2);}

.md-4 { margin-block-end: var(--space-4);}

.md-12 { margin-block-end: var(--space-12);}

.text-center {
    text-align: center;
}

.text-justify {
    text-align: justify;
}

.marker {
    :not(:first-child)::marker {
        content: "|";
        margin-inline: 1em;
    }
}

body {
    font-size: var(--font-size-relative-base);
    font-family: __Inter_d65c78, __Inter_Fallback_d65c78;
    font-style: normal;
    /*--text-primary: hsl(117, 40%, 33%);*/
    /*--text-secondary: var(--text-secondary);*/
}

svg {
    width: var(--font-size-base);
    height: var(--font-size-xl);
}

h1 {
    font-size: var(--font-size-relative-5xl);
    font-weight: var(--font-weight-bold);
}

h2 {
    font-size: var(--font-size-2xl);
    font-weight: var(--font-weight-semibold);
    line-height: 2rem;
    text-align: center;
    margin-bottom: var(--space-6);
}

h3 {
    font-size: var(--font-size-xl);
    line-height: 1.75em;
}

a {
    display: inline flex;
    gap: var(--space-1);
    &:hover {
        text-decoration: underline;
    }
}

main {

}

header {
    text-align: center;
    #impact {
        svg {
            width: var(--font-size-xl);
        }
    }
}

footer {
    padding: var(--space-6);
    font-size: var(--font-size-sm);
    color: var(--text-muted);
}

.card {
    position: relative;
    padding: var(--space-6);
    box-shadow: var(--shadow-lg);
    background-color: color-mix(var(--color-background), hsl(120deg 50% 50% / 0));
    & p {
        position: relative;
        z-index: 1;
    }
}

.card.opaque {
    @media (orientation: landscape) {
        background-color: var(--color-background);
    }
}

.experience-card {
    font-size: var(--font-size-base);
    @media (orientation: portrait) {
        flex-direction: column;
    }
    img {
        object-fit: contain;
        aspect-ratio: 1;
        height: 10em;
        @media (orientation: landscape) {
            height: 5em;
            width: 5em;
        }
    }
    header {
        text-align: left;
        justify-content: space-between;
        flex-grow: 1;
        @media (orientation: portrait) {
            flex-direction: column;
        }
        .side-block {
            text-align: right;
            @media (orientation: portrait) {
                display: flex;
                justify-content: space-between;
            }
        }
    }
    ul {
        list-style-position: inside;
        list-style-type: disc;
        color: var(--text-primary);
        line-height: 1.5em;
        ::marker {
            color: var(--text-secondary);
        }
    }
}

.container {
    margin-inline: auto;
    position: relative;
    z-index: var(--z-index-above-absolute);
    /*padding: var(--space-4);*/
    @media (orientation: landscape) {
        max-width: 1080px
    }

}

.tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
    font-size: var(--font-size-sm);
    .tag {
        background-color: var(--component-bg);
        color: var(--color-muted);
        border-radius: var(--radius-lg);
        padding: var(--space-1);
        font-size: var(--font-size-xs);
    }
}

.tech-skills {
    column-count: 2;
    column-gap: var(--space-6);
    h3 {
        grid-row: 1;
    }

    fancy-tech-skill-bar {
        width: 100%;
        margin-bottom: var(--space-2);
        --percent: 10%;

        animation: percent-animation 100ms linear both;
        animation-timeline: view();
        animation-range: entry 0 entry 300%;

        ::-webkit-progress-value {

            transform-origin: left;
            scale: var(--percent) 1;
        }
    }
}

a.button-base {
    padding: var(--space-2);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-bold);
    /*color: var(--color-primary);*/
    /*background-color: var(--color-foregrowund);*/
}

/* border animation */
@property --color-zich {
    syntax: "<color>";
    inherits: false;
    initial-value: transparent;
}

.border-animation {
    border: 1px solid transparent;
    border: 1px solid transparent;
    box-sizing: content-box;
    opacity: 1;
    --color-zich: hsl(from var(--color-border) h s calc(l + 20));
    --angle: 0deg;
    --color: var(--color-zich);
    /*transition:  border-image-source 200ms ease;*/

    border-image-source: conic-gradient(from var(--angle), transparent, var(--color) 10deg 15deg, transparent 18deg);
    border-image-slice: 3;
    border-image-outset: 0.3em;

    animation-composition: accumulate;
    animation: color-border 1s 1 forwards, rotate-in 1s 1, rotate-in 1s 3 backwards;
    animation-timing-function: ease-in, ease-in, ease-out;
    animation-timeline: view(block), view(block), auto;
    animation-play-state: running, running, paused;
    &:hover {
        /*animation: rotate-in 3s 1, rotate-in 1s 3s 4, color-border 1s 4s 1 forwards;*/
        animation-play-state: running, running, running;

    }
    /*animation: rotate-in 3s ease-in-out 1, rotate-in 1s 3s ease-out 2, color-border 1s 4s ease-out 1 forwards;*/

}

@keyframes color-border {
    50% {--color: var(--color-zich);}
    100% { --color: transparent; }
}

@keyframes rotate-out {
    0% {
        --angle: 360deg;
    }
}

@keyframes rotate-in {
    100% {
        --angle: 360deg;
    }
}

.-prepare-screenshot {
    .card {
        box-shadow: none !important;
    }
    header h1, figure {
        visibility: hidden;
    }
    header p {
        background-color: transparent;
    }
    .card p {
        color: transparent;
    }
    #main-content {
        background-color: rgb(255, 0, 255);
    }

}

*:has(>.hilbert-curve-background-effect) *:not(canvas){
    /*position:relative;*/
    z-index: 1;

}

.hilbert-curve-background-effect {
    position: absolute;
    inset: 0;
    /*opacity: 0.8;*/
    pointer-events: none;
    /*background-color:red;*/

}